{"version":3,"sources":["conponents/Navbar.js","conponents/EditExercise.js","conponents/CreateExercise.js","conponents/ExercisesList.js","conponents/CreateUser.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","EditExercise","props","useState","username","description","duration","date","Date","exercise","setExercise","users","setUsers","useEffect","axios","get","match","params","id","then","res","data","catch","err","console","log","length","map","user","onSubmit","e","preventDefault","post","window","location","required","value","onChange","target","key","typr","selected","type","CreateExercise","Exercise","substring","_id","onClick","deleteExercise","ExercisesList","exercises","setExercises","delete","filter","el","currentExercise","CreateUser","setUsername","App","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4LAGaA,EAAS,WACpB,OACE,yBAAKC,UAAU,+CACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBAAvB,mBACA,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAvB,cAEF,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,YAA7B,wBAEF,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YAA3B,oB,gnBCXL,IAAME,EAAe,SAACC,GAAW,IAAD,EACLC,mBAAS,CACvCC,SAAU,GACVC,YAAa,GACbC,SAAU,EACVC,KAAM,IAAIC,OALyB,mBAC9BC,EAD8B,KACpBC,EADoB,OAOXP,mBAAS,IAPE,mBAO9BQ,EAP8B,KAOvBC,EAPuB,KASrCC,qBAAU,WACRC,IACGC,IAAI,cAAgBb,EAAMc,MAAMC,OAAOC,IACvCC,MAAK,SAAAC,GACJ,IAAMC,EAAOD,EAAIC,KACjBX,EAAY,CACVN,SAAUiB,EAAKjB,SACfC,YAAagB,EAAKhB,YAClBC,SAAUe,EAAKf,SACfC,KAAM,IAAIC,KAAKa,EAAKd,WAGvBe,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE1BT,IAAMC,IAAI,UAAUI,MAAK,SAAAC,GACrBA,EAAIC,KAAKK,OAAS,GACpBd,EACEQ,EAAIC,KAAKM,KAAI,SAAAC,GACX,OAAOA,EAAKxB,kBAMnB,CAACF,EAAMc,MAAMC,OAAOC,KAEvBL,qBAAU,WACRH,EAAY,EAAD,GACND,EADM,CAETL,SAAUO,EAAM,QAGjB,CAACA,IAqCJ,OACE,6BACE,iDACA,0BAAMkB,SAbO,SAAAC,GACfA,EAAEC,iBAEFjB,IACGkB,KAAK,qBAAsB9B,EAAMc,MAAMC,OAAOC,GAAIT,GAClDU,MAAK,SAAAC,GAAG,OAAII,QAAQC,IAAIL,EAAIC,SAE/BY,OAAOC,SAAW,MAOd,yBAAKnC,UAAU,cACb,6CACA,4BACEoC,UAAQ,EACRpC,UAAU,eACVqC,MAAO3B,EAASL,SAChBiC,SA7Ce,SAAAP,GACvBpB,EAAY,EAAD,GACND,EADM,CAETL,SAAU0B,EAAEQ,OAAOF,SAErBZ,QAAQC,IAAI,WAAYhB,KA0CfE,EAAMgB,KAAI,SAAAC,GACT,OACE,4BAAQW,IAAKX,EAAMQ,MAAOR,GACvBA,QAMX,yBAAK7B,UAAU,cACb,gDACA,2BACEyC,KAAK,OACLL,UAAQ,EACRpC,UAAU,eACVqC,MAAO3B,EAASJ,YAChBgC,SAxDkB,SAAAP,GAC1BpB,EAAY,EAAD,GACND,EADM,CAETJ,YAAayB,EAAEQ,OAAOF,aAwDpB,yBAAKrC,UAAU,cACb,6CACA,2BACEyC,KAAK,OACLL,UAAQ,EACRpC,UAAU,eACVqC,MAAO3B,EAASH,SAChB+B,SA5De,SAAAP,GACvBpB,EAAY,EAAD,GACND,EADM,CAETH,SAAUwB,EAAEQ,OAAOF,aA4DjB,yBAAKrC,UAAU,cACb,yCACA,6BACE,kBAAC,IAAD,CAAY0C,SAAUhC,EAASF,KAAM8B,SA5D1B,SAAA9B,GACnBG,EAAY,EAAD,GACND,EADM,CAETF,eA4DE,yBAAKR,UAAU,cACb,2BACE2C,KAAK,SACLN,MAAM,oBACNrC,UAAU,wB,yjBCjIf,IAAM4C,EAAiB,WAAO,IAAD,EACFxC,mBAAS,CACvCC,SAAU,GACVC,YAAa,GACbC,SAAU,EACVC,KAAM,IAAIC,OALsB,mBAC3BC,EAD2B,KACjBC,EADiB,OAORP,mBAAS,IAPD,mBAO3BQ,EAP2B,KAOpBC,EAPoB,KAUlCC,qBAAU,WACRC,IAAMC,IAAI,UAAUI,MAAK,SAAAC,GACnBA,EAAIC,KAAKK,OAAS,GACpBd,EACEQ,EAAIC,KAAKM,KAAI,SAAAC,GACX,OAAOA,EAAKxB,kBAKnB,IAEHS,qBAAU,WACRH,EAAY,KACPD,EADM,CAETL,SAAUO,EAAM,QAGjB,CAACA,IAsCJ,OACE,6BACE,uDACA,0BAAMkB,SAdO,SAAAC,GACfA,EAAEC,iBACFP,QAAQC,IAAI,WAAYhB,GAExBK,IACGkB,KAAK,iBAAkBvB,GACvBU,MAAK,SAAAC,GAAG,OAAII,QAAQC,IAAIL,EAAIC,SAE/BY,OAAOC,SAAW,MAOd,yBAAKnC,UAAU,cACb,6CACA,4BACEoC,UAAQ,EACRpC,UAAU,eACVqC,MAAO3B,EAASL,SAChBiC,SA9Ce,SAAAP,GACvBpB,EAAY,KACPD,EADM,CAETL,SAAU0B,EAAEQ,OAAOF,SAErBZ,QAAQC,IAAI,WAAYhB,KA2CfE,EAAMgB,KAAI,SAAAC,GACT,OACE,4BAAQW,IAAKX,EAAMQ,MAAOR,GACvBA,QAMX,yBAAK7B,UAAU,cACb,gDACA,2BACEyC,KAAK,OACLL,UAAQ,EACRpC,UAAU,eACVqC,MAAO3B,EAASJ,YAChBgC,SAzDkB,SAAAP,GAC1BpB,EAAY,KACPD,EADM,CAETJ,YAAayB,EAAEQ,OAAOF,aAyDpB,yBAAKrC,UAAU,cACb,6CACA,2BACEyC,KAAK,OACLL,UAAQ,EACRpC,UAAU,eACVqC,MAAO3B,EAASH,SAChB+B,SA7De,SAAAP,GACvBpB,EAAY,KACPD,EADM,CAETH,SAAUwB,EAAEQ,OAAOF,aA6DjB,yBAAKrC,UAAU,cACb,yCACA,6BACE,kBAAC,IAAD,CAAY0C,SAAUhC,EAASF,KAAM8B,SA7D1B,SAAA9B,GACnBG,EAAY,KACPD,EADM,CAETF,eA6DE,yBAAKR,UAAU,cACb,2BACE2C,KAAK,SACLN,MAAM,sBACNrC,UAAU,wBCtHhB6C,EAAW,SAAA1C,GACf,IAAMO,EAAWP,EAAMO,SACvB,OACE,4BACE,4BAAKA,EAASL,UACd,4BAAKK,EAASJ,aACd,4BAAKI,EAASH,UACd,4BAAKG,EAASF,KAAKsC,UAAU,EAAE,KAC/B,4BACE,kBAAC,IAAD,CAAM7C,GAAI,SAASS,EAASqC,KAA5B,QADF,KACiD,IAC/C,kBAAC,IAAD,CAAM9C,GAAG,IAAI+C,QAAS,WAAO7C,EAAM8C,eAAevC,EAASqC,OAA3D,aAMKG,EAAgB,WAAO,IAAD,EACC9C,mBAAS,IADV,mBAC1B+C,EAD0B,KACfC,EADe,KAGjCtC,qBAAU,WACRC,IAAMC,IAAI,cACTI,MAAK,SAAAC,GAAG,OAAI+B,EAAa/B,EAAIC,SAC7BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,IAEH,IAAMyB,EAAiB,SAAC9B,GACtBJ,IAAMsC,OAAO,cAAelC,GAC5BiC,EAAaD,EAAUG,QAAO,SAAAC,GAAE,OAAIA,EAAGR,MAAQ5B,OASjD,OACE,6BACE,gDACA,2BAAOnB,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,wCACA,0CACA,wCACA,oCACA,yCAGJ,+BAlBGmD,EAAUvB,KAAI,SAAA4B,GACnB,OAAO,kBAAC,EAAD,CAAUhB,IAAKgB,EAAgBT,IAAKrC,SAAU8C,EAAiBP,eAAgBA,WCjC/EQ,EAAa,WAAO,IAAD,EACErD,mBAAS,IADX,mBACvBC,EADuB,KACbqD,EADa,KAiB9B,OACE,6BACE,+CACA,0BAAM5B,SAbO,SAAAC,GACfA,EAAEC,iBAEFjB,IAAMkB,KAAK,aAAc,CAAC5B,aACzBe,MAAK,SAAAC,GAAG,OAAII,QAAQC,IAAIL,EAAIC,SAE7BoC,EAAY,MAQR,yBAAK1D,UAAU,cACb,6CACA,2BAAO2C,KAAK,OACVP,UAAQ,EACRpC,UAAU,eACVqC,MAAOhC,EACPiC,SAxBe,SAAAP,GACvB2B,EAAY3B,EAAEQ,OAAOF,WA2BjB,yBAAKrC,UAAU,cACb,2BACE2C,KAAK,SACLN,MAAM,cACNrC,UAAU,wBCbP2D,MAff,WACE,OACE,kBAAC,IAAD,KACE,yBAAK3D,UAAU,aACb,kBAAC,EAAD,MACA,6BACA,kBAAC,IAAD,CAAO4D,KAAK,IAAIC,OAAK,EAACC,UAAWZ,IACjC,kBAAC,IAAD,CAAOU,KAAK,YAAYE,UAAW5D,IACnC,kBAAC,IAAD,CAAO0D,KAAK,UAAUE,UAAWlB,IACjC,kBAAC,IAAD,CAAOgB,KAAK,QAAQE,UAAWL,OCPnBM,QACW,cAA7B7B,OAAOC,SAAS6B,UAEe,UAA7B9B,OAAOC,SAAS6B,UAEhB9B,OAAOC,SAAS6B,SAAS/C,MACvB,2DCZNgD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnD,MAAK,SAAAoD,GACjCA,EAAaC,iB","file":"static/js/main.e083ee4c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <nav className='navbar navbar-dark bg-dark navbar-expand-lg'>\r\n      <Link to='/' className='navbar-brand' >Exercises Tasks</Link>\r\n      <div className='collpase navbar-collapse'>\r\n        <ul className='navbar-nav mr-auto'>\r\n          <li className='navbar-item' >\r\n            <Link to='/' className='nav-link'>Exercises</Link>\r\n          </li>\r\n          <li className='navbar-item' >\r\n            <Link to='/create' className='nav-link'>Create Exercise Log</Link>\r\n          </li>\r\n          <li className='navbar-item' >\r\n            <Link to='/user' className='nav-link'>Create User</Link>\r\n          </li>\r\n        </ul>\r\n\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from \"axios\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport const EditExercise = (props) => {\r\n  const [exercise, setExercise] = useState({\r\n    username: \"\",\r\n    description: \"\",\r\n    duration: 0,\r\n    date: new Date()\r\n  });\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/exercises/\" + props.match.params.id)\r\n      .then(res => {\r\n        const data = res.data\r\n        setExercise({\r\n          username: data.username,\r\n          description: data.description,\r\n          duration: data.duration,\r\n          date: new Date(data.date)\r\n        });\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n      axios.get(\"/users\").then(res => {\r\n      if (res.data.length > 0) {\r\n        setUsers(\r\n          res.data.map(user => {\r\n            return user.username;\r\n          })\r\n        );        \r\n      }\r\n    });\r\n\r\n  }, [props.match.params.id]);\r\n\r\n  useEffect(() => {\r\n    setExercise({\r\n      ...exercise,\r\n      username: users[0]\r\n    })\r\n    // eslint-disable-next-line \r\n  }, [users])\r\n\r\n  const onChangeUsername = e => {\r\n    setExercise({\r\n      ...exercise,\r\n      username: e.target.value\r\n    });\r\n    console.log('exercise', exercise)\r\n  };\r\n  const onChangeDescription = e => {\r\n    setExercise({\r\n      ...exercise,\r\n      description: e.target.value\r\n    });\r\n  };\r\n  const onChangeDuration = e => {\r\n    setExercise({\r\n      ...exercise,\r\n      duration: e.target.value\r\n    });\r\n  };\r\n  const onChangeDate = date => {\r\n    setExercise({\r\n      ...exercise,\r\n      date\r\n    });\r\n  };\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\"/exercises/update/\"+ props.match.params.id, exercise)\r\n      .then(res => console.log(res.data));\r\n\r\n    window.location = \"/\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Edit Exercise Log</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Username: </label>\r\n          <select\r\n            required\r\n            className=\"form-control\"\r\n            value={exercise.username}\r\n            onChange={onChangeUsername}\r\n          >\r\n            {users.map(user => {\r\n              return (\r\n                <option key={user} value={user}>\r\n                  {user}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Description: </label>\r\n          <input\r\n            typr=\"text\"\r\n            required\r\n            className=\"form-control\"\r\n            value={exercise.description}\r\n            onChange={onChangeDescription}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Duration: </label>\r\n          <input\r\n            typr=\"text\"\r\n            required\r\n            className=\"form-control\"\r\n            value={exercise.duration}\r\n            onChange={onChangeDuration}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Date: </label>\r\n          <div>\r\n            <DatePicker selected={exercise.date} onChange={onChangeDate} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Edit Exercise Log\"\r\n            className=\"btn btn-primary\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from \"axios\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport const CreateExercise = () => {\r\n  const [exercise, setExercise] = useState({\r\n    username: \"\",\r\n    description: \"\",\r\n    duration: 0,\r\n    date: new Date()\r\n  });\r\n  const [users, setUsers] = useState([]);\r\n  \r\n  \r\n  useEffect(() => {\r\n    axios.get(\"/users\").then(res => {\r\n      if (res.data.length > 0) {\r\n        setUsers(\r\n          res.data.map(user => {\r\n            return user.username;\r\n          })\r\n        );        \r\n      }\r\n    });\r\n  }, [] );\r\n\r\n  useEffect(() => {\r\n    setExercise({\r\n      ...exercise,\r\n      username: users[0]\r\n    })\r\n    // eslint-disable-next-line \r\n  }, [users])\r\n\r\n  const onChangeUsername = e => {\r\n    setExercise({\r\n      ...exercise,\r\n      username: e.target.value\r\n    });\r\n    console.log('exercise', exercise)\r\n  };\r\n  const onChangeDescription = e => {\r\n    setExercise({\r\n      ...exercise,\r\n      description: e.target.value\r\n    });\r\n  };\r\n  const onChangeDuration = e => {\r\n    setExercise({\r\n      ...exercise,\r\n      duration: e.target.value\r\n    });\r\n  };\r\n  const onChangeDate = date => {\r\n    setExercise({\r\n      ...exercise,\r\n      date\r\n    });\r\n  };\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(\"exercise\", exercise);\r\n\r\n    axios\r\n      .post(\"/exercises/add\", exercise)\r\n      .then(res => console.log(res.data));\r\n\r\n    window.location = \"/\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Create New Exercise Log</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Username: </label>\r\n          <select\r\n            required\r\n            className=\"form-control\"\r\n            value={exercise.username}\r\n            onChange={onChangeUsername}\r\n          >\r\n            {users.map(user => {\r\n              return (\r\n                <option key={user} value={user}>\r\n                  {user}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Description: </label>\r\n          <input\r\n            typr=\"text\"\r\n            required\r\n            className=\"form-control\"\r\n            value={exercise.description}\r\n            onChange={onChangeDescription}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Duration: </label>\r\n          <input\r\n            typr=\"text\"\r\n            required\r\n            className=\"form-control\"\r\n            value={exercise.duration}\r\n            onChange={onChangeDuration}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Date: </label>\r\n          <div>\r\n            <DatePicker selected={exercise.date} onChange={onChangeDate} />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Create Exercise Log\"\r\n            className=\"btn btn-primary\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst Exercise = props => {\r\n  const exercise = props.exercise\r\n  return (\r\n    <tr>\r\n      <td>{exercise.username}</td>\r\n      <td>{exercise.description}</td>\r\n      <td>{exercise.duration}</td>\r\n      <td>{exercise.date.substring(0,10)}</td>\r\n      <td>\r\n        <Link to={'/edit/'+exercise._id}>edit</Link> |{' '}\r\n        <Link to='/' onClick={() => {props.deleteExercise(exercise._id)}}>delete</Link>        \r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const ExercisesList = () => {\r\n  const [exercises, setExercises] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get('/exercises')\r\n    .then(res => setExercises(res.data))\r\n    .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  const deleteExercise = (id) => {\r\n    axios.delete('/exercises/'+ id)\r\n    setExercises(exercises.filter(el => el._id !== id))\r\n  }\r\n\r\n  const exerciseList = () => {\r\n    return exercises.map(currentExercise => {\r\n      return <Exercise key={currentExercise._id} exercise={currentExercise} deleteExercise={deleteExercise} />\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Logged Exercises</h3>\r\n      <table className='table'>\r\n        <thead className='thead-light'>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Decription</th>\r\n            <th>Diration</th>\r\n            <th>Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{exerciseList()}</tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const CreateUser = () => {\r\n  const [username, setUsername] = useState('')\r\n\r\n  const onChangeUsername = e => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    axios.post('/users/add', {username})\r\n    .then(res => console.log(res.data))\r\n\r\n    setUsername('')\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>Create New User</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Username: </label>\r\n          <input type='text'\r\n            required\r\n            className=\"form-control\"\r\n            value={username}\r\n            onChange={onChangeUsername}\r\n          />\r\n            \r\n        </div> \r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Create User\"\r\n            className=\"btn btn-primary\"\r\n          />\r\n        </div>       \r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Navbar } from \"./conponents/Navbar\";\r\nimport { EditExercise } from \"./conponents/EditExercise\";\r\nimport { CreateExercise } from \"./conponents/CreateExercise\";\r\nimport { ExercisesList } from \"./conponents/ExercisesList\";\r\nimport { CreateUser } from \"./conponents/CreateUser\";\r\n\r\n// export const port = process.env.PORT_FRONT || 3000;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Navbar />\r\n        <br />\r\n        <Route path=\"/\" exact component={ExercisesList} />\r\n        <Route path=\"/edit/:id\" component={EditExercise} />\r\n        <Route path=\"/create\" component={CreateExercise} />\r\n        <Route path=\"/user\" component={CreateUser} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}